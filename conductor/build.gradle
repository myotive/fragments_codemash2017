apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        applicationId "com.example.myotive.conductor"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        debug{
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // I had to add this to resolve a conflict in RxLifecycle
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.1'

    compile project(":codemash_common")

    // Conductor
    compile 'com.bluelinelabs:conductor:2.0.4'
    // If you want the components that go along with
    // Android's support libraries (currently just a PagerAdapter):
    compile 'com.bluelinelabs:conductor-support:2.0.4'
    // If you want RxJava/RxAndroid lifecycle support:
    compile 'com.bluelinelabs:conductor-rxlifecycle:2.0.4'

    // RxAndroid
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'

    // RxLifecycle
    compile 'com.trello:rxlifecycle:1.0'
    // If you want to bind to Android-specific lifecycles
    compile 'com.trello:rxlifecycle-android:1.0'
    // If you want pre-written Activities and Fragments you can subclass as providers
    compile 'com.trello:rxlifecycle-components:1.0'

    // Dagger 2
    compile 'com.google.dagger:dagger:2.8'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.8'

    testCompile 'junit:junit:4.12'
}
